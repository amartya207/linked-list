#include <stdio.h>
#include<stdlib.h>
//declaring the data typede;
struct node{
    int data;
    struct node*next;
};
void printing(struct node*ptr){
    while(ptr!=NULL){
        printf("%d",ptr->data);
        ptr=ptr->next;
    }
}
//case1
struct node*insertatfirst(struct node*head,int value){
  struct node*ptr=(struct node*)malloc(sizeof(struct node));  
  ptr->data=value;
 
  ptr->next=head;
  head=ptr;
  return head;
}

//case2 
struct node*insertatend(struct node*head,int value){
  struct node*ptr=(struct node*)malloc(sizeof(struct node)); 
  struct node*p=head;
  while(p->next!=NULL)
      p=p->next;
  ptr->data=value;
  p->next=ptr;
  return head;}
 //case3
 struct node*insertatindex(struct node*head,int value,int index){
 struct node*ptr=(struct node*)malloc(sizeof(struct node)); 
 struct node*p=head;
 int i=0;
 while(i!=index-1){
     p=p->next;
     i++;
 }
   ptr->data=value;
   ptr->next=p->next;
   p->next=ptr;
   return head;
}
//case 4
 struct node*insertafternode(struct node*head,int value,struct node*previous){
 struct node*ptr=(struct node*)malloc(sizeof(struct node)); 
 ptr->data=value;
ptr->next=previous->next;
previous->next=ptr;

return head;}


int main()
{ struct node*head=(struct node*)malloc(sizeof(struct node));
 struct node*second=(struct node*)malloc(sizeof(struct node));
 struct node*third=(struct node*)malloc(sizeof(struct node));
 
 head->data=8;
 head->next=second;
 
 second->data=7;
 second->next=third;
 
 third->data=3;
 third->next=NULL;
// printing(head);
head=insertatfirst(head,5);
 // printing(head);
  head=insertatend(head,6);
  //printing(head);
 // head=insertatindex(head,9,3);
  //printing(head);
  head=insertafternode(head,2,second);
printing(head);
printf("\nGood job Amartya\nKindly Revise weekly;\nThankyou!");
    return 0;
}
